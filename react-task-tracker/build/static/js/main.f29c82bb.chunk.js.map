{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f29c82bb.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({color , text, onClick }) => {\n    return (\n            <button \n            onClick={onClick}\n            style= {{ backgroundColor:color }} className='btn'>{text}\n            </button>\n    )\n}\n\nButton.defaultProps = {\n    color:'Black',\n\n}\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n\nconst Header = ({title, onAdd, showAdd}) => {\n   \n\n    return (\n        <header className='header'>\n            <h1> {title} </h1>            \n            <Button onClick={onAdd} className='btn' \n            text={showAdd ? 'Close' : 'Add'}\n            color = {showAdd ? 'red' : 'blue'}/>\n            \n        </header>\n    )\n}\nHeader.defaultProps = {\n    title: \"Task Tracker\",\n\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n\n}\n//css in javasrcipt\n// const headingStyle={\n//     color: 'red';\n//     background: 'black';\n\n// }\n\nexport default Header\n","import { FaTimes  } from 'react-icons/fa'\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className= {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3> { task.text } <FaTimes style={{color:'red', cursor:'pointer'}}\n            onClick={() => onDelete(task.id) }/>\n            </h3>\n            <p> { task.day }</p>\n        </div>\n    )\n}\n\nexport default Task\n","import { useState } from 'react'\nimport Task from './Task'\n\n\nconst Tasks = ( { tasks, onDelete , onToggle} ) => {\n    \n    return (\n        <>\n            {\n                tasks.map((task) =>(\n                    <Task key={task.id} task={task} \n                    onDelete = {onDelete}\n                    onToggle = {onToggle}/>\n                ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text){\n            alert('please add text')\n            return\n        }\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n\n    }\n\n\n\n\n    return (\n        <form className= 'add-form' onSubmit = {onSubmit}>\n            <div className= 'form-control'>\n                <label> Task</label>\n                <input type = 'text' placeholder = 'Add task Here' \n                value= {text} onChange={(e) => setText(e.target.value)}/>   \n            </div>\n             <div className= 'form-control'>\n                <label> Day </label>\n                <input type = 'text' placeholder = 'Add Day here ' \n                value={day} onChange={(e) => setDay(e.target.value)}/>   \n            </div>\n             <div className= 'form-control form-control-check'>\n                <label> Task</label>\n                <input type = 'checkbox' checked = {reminder} value={reminder} \n                onChange={(e) => setReminder(e.currentTarget.checked)}/>   \n            </div>\n            <input type='submit' value='save Task' className= 'btn btn-block'/>\n\n\n\n\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] =  useState(false)\n\n\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctor Appnt',\n        day: 'feb friday ',\n        reminder: 'true',\n\n    },\n    {\n        id: 2,\n        text: 'Doctor Appnt2',\n        day: 'feb sunday ',\n        reminder: 'true',\n\n    },\n    {\n        id: 3,\n        text: 'Doctor Abkono',\n        day: 'feb friday ',\n        reminder: 'false',\n\n    }\n])\n// Add Task\nconst addTask = (task) =>{\n  const id = Math.floor(Math.random() * 1000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n//Delete Task\nconst deletetask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) =>{\n  setTasks(tasks.map((task) => task.id === id ? \n  { ...task, reminder: !task.reminder } : task))\n}\n  return (\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask  onAdd={addTask}/>}\n     {tasks.length > 0 ? (<Tasks tasks= {tasks} onDelete={\n       deletetask} onToggle={toggleReminder} />): ('No task to show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}