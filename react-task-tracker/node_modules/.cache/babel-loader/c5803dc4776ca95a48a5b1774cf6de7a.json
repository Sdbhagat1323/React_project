{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ace/Desktop/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //Delete Task\n\n\n  const deletetask = async id => {\n    await fetch(`http://localhost:5000/tasks${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deletetask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }, this) : 'No task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ace/Desktop/react/react-task-tracker/src/App.js"],"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","id","Math","floor","random","newTask","deletetask","method","filter","toggleReminder","map","reminder","length"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiCP,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMS,QAAQ,GAAG,YAAY;AAC3B,YAAMC,eAAe,GAAG,MAAMC,UAAU,EAAxC;AACAH,MAAAA,QAAQ,CAACE,eAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AAGT,GARQ,EAQN,EARM,CAAT,CAJa,CAef;;AACA,QAAME,UAAU,GAAG,YAAY;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAOD,IAAP;AAEL,GAND,CAhBe,CAwBf;;;AACA,QAAME,OAAO,GAAIC,IAAD,IAAS;AACvB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,IAAmC,CAA9C;AACA,UAAMC,OAAO,GAAG;AAACJ,MAAAA,EAAD;AAAK,SAAGD;AAAR,KAAhB;AACAT,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR;AACD,GAJD,CAzBe,CA8Bf;;;AACA,QAAMC,UAAU,GAAG,MAAOL,EAAP,IAAc;AAC/B,UAAML,KAAK,CAAE,8BAA6BK,EAAG,EAAlC,EAAqC;AAC9CM,MAAAA,MAAM,EAAC;AADuC,KAArC,CAAX;AAGAhB,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAcR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GALD,CA/Be,CAsCf;;;AACA,QAAMQ,cAAc,GAAIR,EAAD,IAAO;AAC5BV,IAAAA,QAAQ,CAACD,KAAK,CAACoB,GAAN,CAAWV,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAC7B,EAAE,GAAGD,IAAL;AAAWW,MAAAA,QAAQ,EAAE,CAACX,IAAI,CAACW;AAA3B,KAD6B,GACWX,IAD/B,CAAD,CAAR;AAED,GAHD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAAnC;AAAmD,MAAA,OAAO,EAAEA;AAA5D;AAAA;AAAA;AAAA;AAAA,YADD,EAEEA,WAAW,iBAAI,QAAC,OAAD;AAAU,MAAA,KAAK,EAAEW;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFjB,EAGET,KAAK,CAACsB,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAGtB,KAAf;AAAsB,MAAA,QAAQ,EACjDgB,UADmB;AACP,MAAA,QAAQ,EAAEG;AADH;AAAA;AAAA;AAAA;AAAA,YAApB,GAC6C,iBAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApDQtB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] =  useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect (() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n\n    \n  }, [])\n\n   \n// fetch Tasks\nconst fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n\n      return data\n\n}\n\n// Add Task\nconst addTask = (task) =>{\n  const id = Math.floor(Math.random() * 1000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n//Delete Task\nconst deletetask = async (id) => {\n  await fetch(`http://localhost:5000/tasks${id}`, {\n    method:'DELETE',\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) =>{\n  setTasks(tasks.map((task) => task.id === id ? \n  { ...task, reminder: !task.reminder } : task))\n}\n  return (\n    <div className=\"container\">\n     <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n     {showAddTask && <AddTask  onAdd={addTask}/>}\n     {tasks.length > 0 ? (<Tasks tasks= {tasks} onDelete={\n       deletetask} onToggle={toggleReminder} />): ('No task to show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}