{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ace/Desktop/react/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react';\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctor Appnt',\n    day: 'feb friday ',\n    reminder: 'true'\n  }, {\n    id: 2,\n    text: 'Doctor Appnt2',\n    day: 'feb sunday ',\n    reminder: 'true'\n  }, {\n    id: 3,\n    text: 'Doctor Abkono',\n    day: 'feb friday ',\n    reminder: 'false'\n  }]); // Add Task\n\n  const addTask = task => {\n    const id = Mathm.floor(Math.random() * 1000) + 1;\n    const newTask = { ...task,\n      id\n    };\n    setTasks;\n  }; //Delete Task\n\n\n  const deletetask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deletetask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this) : 'No task to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gTlnfdL5EqD9++1wjSon1duolHE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ace/Desktop/react/react-task-tracker/src/App.js"],"names":["Header","Tasks","AddTask","useState","App","tasks","setTasks","id","text","day","reminder","addTask","task","Mathm","floor","Math","random","newTask","deletetask","filter","toggleReminder","map","length"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;AACII,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,cAFV;AAGIC,IAAAA,GAAG,EAAE,aAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADiC,EAQjC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,GAAG,EAAE,aAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GARiC,EAejC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,eAFV;AAGIC,IAAAA,GAAG,EAAE,aAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAfiC,CAAD,CAAlC,CADa,CAwBf;;AACA,QAAMC,OAAO,GAAIC,IAAD,IAAS;AACvB,UAAML,EAAE,GAAGM,KAAK,CAACC,KAAN,CAAYC,IAAI,CAACC,MAAL,KAAgB,IAA5B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG,EAAC,GAAGL,IAAJ;AAAUL,MAAAA;AAAV,KAAhB;AACAD,IAAAA,QAAQ;AACT,GAJD,CAzBe,CA8Bf;;;AACA,QAAMY,UAAU,GAAIX,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA/Be,CAmCf;;;AACA,QAAMa,cAAc,GAAIb,EAAD,IAAO;AAC5BD,IAAAA,QAAQ,CAACD,KAAK,CAACgB,GAAN,CAAWT,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAZ,GAC7B,EAAE,GAAGK,IAAL;AAAWF,MAAAA,QAAQ,EAAE,CAACE,IAAI,CAACF;AAA3B,KAD6B,GACWE,IAD/B,CAAD,CAAR;AAED,GAHD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,OAAD;AAAU,MAAA,KAAK,EAAED;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFD,EAGEN,KAAK,CAACiB,MAAN,GAAe,CAAf,gBAAoB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAGjB,KAAf;AAAsB,MAAA,QAAQ,EACjDa,UADmB;AACP,MAAA,QAAQ,EAAEE;AADH;AAAA;AAAA;AAAA;AAAA,YAApB,GAC6C,iBAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjDQhB,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctor Appnt',\n        day: 'feb friday ',\n        reminder: 'true',\n\n    },\n    {\n        id: 2,\n        text: 'Doctor Appnt2',\n        day: 'feb sunday ',\n        reminder: 'true',\n\n    },\n    {\n        id: 3,\n        text: 'Doctor Abkono',\n        day: 'feb friday ',\n        reminder: 'false',\n\n    }\n])\n// Add Task\nconst addTask = (task) =>{\n  const id = Mathm.floor(Math.random() * 1000) + 1\n  const newTask = {...task, id}\n  setTasks\n}\n//Delete Task\nconst deletetask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = (id) =>{\n  setTasks(tasks.map((task) => task.id === id ? \n  { ...task, reminder: !task.reminder } : task))\n}\n  return (\n    <div className=\"container\">\n     <Header />\n     <AddTask  onAdd={addTask}/>\n     {tasks.length > 0 ? (<Tasks tasks= {tasks} onDelete={\n       deletetask} onToggle={toggleReminder} />): ('No task to show')}\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}